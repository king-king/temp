var map = {
    "app/lib/basic/util.js" : function ( exports ) {
        function loopArray( arr, func ) {
            for ( var i = 0; i < arr.length; i++ ) {
                func( arr[i], i );
            }
        }

        function loop( count, func ) {
            for ( var i = 0; i < count; i++ ) {
                func( i );
            }
        }

        function map( arr, func ) {
            var newArray = [];
            loopArray( arr, function ( item ) {
                newArray.push( func( item ) );
            } );
            return newArray;
        }

        exports.loop = loop;
        exports.loopArray = loopArray;
        exports.map = map;
    }, "app/lib/basic/task.js" : function ( exports ) {
        // ˳��ִ��
        function serialTask( tasks, callback ) {
            var index = 0;
            tasks[index] && tasks[index]( function () {
                ++index == tasks.length ? callback() : tasks[index]( arguments.callee );
            } );
        }

        // ����ִ��
        function concurrentTask( tasks, callback ) {
            var len = tasks.length,
                count = 0;
            tasks.forEach( function ( task ) {
                task( function () {
                    count++;
                    if ( count == len ) {
                        callback();
                    }
                } );
            } );
        }

        exports.serialTask = serialTask;
        exports.concurrentTask = concurrentTask;
    }, "app/lib/com/ajax.js" : function ( exports, module ) {
        module.exports = function ( url, callback ) {
            setTimeout( function () {
                callback( url );
            }, Math.random() * 2000 + 1000 );
        }
    },
};
(function () {
    window.main = function ( func ) {
        func();
    };

    function resolve( base, path ) {
        function clearFileName( path ) {
            if ( path.indexOf( "." ) != -1 ) {
                path = path.split( "/" ).slice( 0, -1 ).join( "/" );
            }
            return path;
        }

        base = clearFileName( base );
        var block = path.split( "/" );
        if ( block.length == 1 ) {
            // path单纯是个文件名
            return base + "/" + block[0];
        }
        else {
            for ( var i = 0; i < block.length; i++ ) {
                if ( block[i] == ".." ) {
                    // 回退
                    base = back( base );
                }
                else {
                    if ( base == "" ) {
                        base = block[i];
                    }
                    else {
                        base = base + "/" + block[i];
                    }
                }
            }
            return base;
        }
    }

    function back( path ) {
        var block = path.split( "/" );
        if ( block.length > 2 ) {
            block = block.slice( 0, -1 );
            return block.join( "/" );
        }
        else {
            return "";
        }
    }

    curPath = "app/lib/main.js";
    var scripts = [curPath];

    window.imports = function ( src ) {
        curPath = resolve( scripts[scripts.length - 1], src );
        scripts.push( curPath );
        if ( map[curPath] ) {
            var exports = {};
            var module = {exports : null};
            map[curPath]( exports, module );
        }
        scripts.pop();
        return module.exports ? module.exports : exports;
    }
})();
/**
 * Created by WQ on 2015/6/25.
 */

main( function () {
    var util = imports( "basic/util.js" );
    var task = imports( "basic/task.js" );
    var ajax = imports( "com/ajax.js" );

    var urls = [
        "http://www.baidu.com",
        "http://www.sina.com",
        "http://www.sohu.com",
        "http://www.qq.com",
        "http://www.google.com"
    ];

    task.serialTask( util.map( urls, function ( url ) {
        return function ( done ) {
            ajax( url, function ( text ) {
                console.log( text );
                done();
            } );
        }
    } ), function () {
        console.log( "end" );
    } );

} );